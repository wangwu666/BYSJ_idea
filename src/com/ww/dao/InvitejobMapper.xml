<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ww.dao.InvitejobMapper">
	<resultMap id="BaseResultMap" type="com.ww.model.Invitejob">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="born" property="born" jdbcType="VARCHAR" />
		<result column="job" property="job" jdbcType="VARCHAR" />
		<result column="specialty" property="specialty" jdbcType="VARCHAR" />
		<result column="experience" property="experience" jdbcType="VARCHAR" />
		<result column="teachSchool" property="teachschool" jdbcType="VARCHAR" />
		<result column="afterSchool" property="afterschool" jdbcType="VARCHAR" />
		<result column="tel" property="tel" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="VARCHAR" />
		<result column="isstock" property="isstock" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.ww.model.Invitejob" extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, name, sex, age, born, job, specialty, experience,
		teachSchool,
		afterSchool, tel,
		address, createtime, isstock
  	</sql>

	<!-- 通过id来修改invite的录取状态 -->
	<update id="updateByPrimaryKey1" parameterType="com.ww.model.Invitejob">
		update
		tb_invitejob set isstock = 1 where id = #{id}
  	</update>


	<!--<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"-->
		<!--parameterType="java.lang.Integer">-->
		<!--select-->
		<!--<include refid="Base_Column_List" />-->
		<!--,-->
		<!--<include refid="Blob_Column_List" />-->
		<!--from tb_invitejob-->
		<!--where id = #{id,jdbcType=INTEGER}-->
	<!--</select>-->


	<!-- 修改过 -->
	<update id="updateByPrimaryKey" parameterType="com.ww.model.Invitejob">
		update
		tb_invitejob set isstock = #{isstock} where id = #{id}  
  	</update>


	<!-- 通过非录用查询tb_invitejob -->
	<select id="selectInvitejobNotEnroll" resultMap="BaseResultMap">
		SELECT id,name,sex,job,
		teachSchool,experience from
		tb_invitejob where isstock=0
  	</select>


	<!-- 通过录用查询tb_invitejob -->
	<select id="selectInvitejobEnroll" resultMap="BaseResultMap">
		SELECT id,name,sex,job,
		teachSchool,experience from
		tb_invitejob where isstock=1
  	</select>


	<!--招聘分页查询() -->
	<select id="goodsListByPagePay" resultMap="BaseResultMap">
		SELECT
		id,name,sex,job, teachSchool,experience from tb_invitejob limit
		#{startIndex},#{pagesize}
  	</select>


	<select id="queryGoodsTotalPay" resultType="int">
		select count(*) from
		tb_invitejob
  	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tb_invitejob
		where id = #{id,jdbcType=INTEGER}
  	</delete>

	<insert id="insert" parameterType="com.ww.model.Invitejob">
		insert into tb_invitejob (id,
		name, sex,
		age, born, job, specialty,
		experience, teachSchool,
		afterSchool,
		tel, address, createtime,
		isstock, content)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER},
		#{born,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR},
		#{specialty,jdbcType=VARCHAR},
		#{experience,jdbcType=VARCHAR},
		#{teachschool,jdbcType=VARCHAR}, #{afterschool,jdbcType=VARCHAR},
		#{tel,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{createtime,jdbcType=VARCHAR},
		#{isstock,jdbcType=INTEGER},
		#{content,jdbcType=LONGVARCHAR})
  	</insert>



</mapper>